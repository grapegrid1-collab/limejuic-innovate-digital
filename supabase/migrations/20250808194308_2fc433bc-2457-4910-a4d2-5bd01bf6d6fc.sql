-- Enable required extension for UUIDs
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Contact submissions table
CREATE TABLE IF NOT EXISTS public.contact_submissions (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  name text NOT NULL,
  email text NOT NULL,
  message text NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now()
);

-- Enable RLS and allow public inserts only
ALTER TABLE public.contact_submissions ENABLE ROW LEVEL SECURITY;
DO $$ BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies WHERE schemaname = 'public' AND tablename = 'contact_submissions' AND policyname = 'Anyone can insert contact submissions'
  ) THEN
    CREATE POLICY "Anyone can insert contact submissions"
      ON public.contact_submissions
      FOR INSERT
      TO anon, authenticated
      WITH CHECK (true);
  END IF;
END $$;

-- AI assistant usage table for rate limiting
CREATE TABLE IF NOT EXISTS public.ai_assistant_usage (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ip_hash text NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now()
);

CREATE INDEX IF NOT EXISTS ai_usage_ip_created_idx
  ON public.ai_assistant_usage (ip_hash, created_at);

ALTER TABLE public.ai_assistant_usage ENABLE ROW LEVEL SECURITY;
-- Intentionally no public policies; service role in Edge Functions bypasses RLS